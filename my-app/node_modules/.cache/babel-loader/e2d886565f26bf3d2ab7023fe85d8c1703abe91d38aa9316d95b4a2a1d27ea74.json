{"ast":null,"code":"import React,{useState}from'react';import AnimeCard from'./AnimeCard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ListAnime(_ref){let{AnimeList}=_ref;const[start,setStart]=useState(0);const toLeft=()=>{if(start>0){setStart(start-1);// Di chuyển sang trái\n}};const toRight=()=>{if(start+visibleImages<AnimeList.length){setStart(start+1);// Di chuyển sang phải\n}else{setStart(0);// Quay lại đầu\n}};const gap=16;// Khoảng cách giữa các ảnh (px)\nconst visibleImages=8;// Số ảnh hiển thị cùng lúc\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"flex overflow-hidden h-fit relative w-full\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"bg-red-700 bg-opacity-90 self-center size-7 absolute left-0 z-10\",onClick:toLeft,children:\"\\u2190\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-4 transition-transform duration-500 ease-in-out\",style:{transform:\"translateX(calc(-\".concat(start*(100/visibleImages),\"% - \").concat(start*(gap/visibleImages),\"px))\")},children:AnimeList.map((item,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",style:{// Chiều rộng mỗi ảnh\nwidth:\"calc(\".concat(100/visibleImages,\"% - \").concat(gap*(visibleImages-1)/visibleImages,\"px)\")},children:/*#__PURE__*/_jsx(AnimeCard,{Anime:item})},index))}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-red-700 bg-opacity-90 size-7 self-center h-fit absolute right-0 z-10\",onClick:toRight,children:\"\\u2192\"})]});}","map":{"version":3,"names":["React","useState","AnimeCard","jsx","_jsx","jsxs","_jsxs","ListAnime","_ref","AnimeList","start","setStart","toLeft","toRight","visibleImages","length","gap","className","children","onClick","style","transform","concat","map","item","index","width","Anime"],"sources":["D:/.Net/tmp/my-app/src/Component/ListAnime.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport AnimeCard from './AnimeCard';\r\n\r\nexport default function ListAnime({AnimeList}) {\r\n\r\n\r\n    const [start, setStart] = useState(0);\r\n    \r\n    const toLeft = () => {\r\n        if (start > 0) {\r\n            setStart(start - 1); // Di chuyển sang trái\r\n        }\r\n    };\r\n\r\n    const toRight = () => {\r\n        if (start + visibleImages < AnimeList.length) {\r\n            setStart(start + 1); // Di chuyển sang phải\r\n        } else {\r\n            setStart(0); // Quay lại đầu\r\n        }\r\n    };\r\n\r\n    const gap = 16; // Khoảng cách giữa các ảnh (px)\r\n    const visibleImages = 8; // Số ảnh hiển thị cùng lúc\r\n\r\n    return (\r\n        <div className=\"flex overflow-hidden h-fit relative w-full\">\r\n            {/* Nút sang trái */}\r\n            <button\r\n                className=\"bg-red-700 bg-opacity-90 self-center size-7 absolute left-0 z-10\"\r\n                onClick={toLeft}\r\n            >\r\n                &#8592;\r\n            </button>\r\n\r\n            {/* Container ảnh */}\r\n            <div\r\n                className=\"flex gap-4 transition-transform duration-500 ease-in-out\"\r\n                style={{\r\n                    transform: `translateX(calc(-${start * (100 / visibleImages)}% - ${start * (gap/visibleImages)}px))`,\r\n                }}\r\n            >\r\n                {AnimeList.map((item, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className=\"flex-shrink-0\"\r\n                        style={{\r\n                            // Chiều rộng mỗi ảnh\r\n                            width: `calc(${100 / visibleImages}% - ${(gap * (visibleImages - 1)) / visibleImages}px)`,\r\n                        }}\r\n                    >\r\n                        <AnimeCard Anime={item}/>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Nút sang phải */}\r\n            <button\r\n                className=\"bg-red-700 bg-opacity-90 size-7 self-center h-fit absolute right-0 z-10\"\r\n                onClick={toRight}\r\n            >\r\n                &#8594;\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,SAAS,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpC,cAAe,SAAS,CAAAC,SAASA,CAAAC,IAAA,CAAc,IAAb,CAACC,SAAS,CAAC,CAAAD,IAAA,CAGzC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CAErC,KAAM,CAAAW,MAAM,CAAGA,CAAA,GAAM,CACjB,GAAIF,KAAK,CAAG,CAAC,CAAE,CACXC,QAAQ,CAACD,KAAK,CAAG,CAAC,CAAC,CAAE;AACzB,CACJ,CAAC,CAED,KAAM,CAAAG,OAAO,CAAGA,CAAA,GAAM,CAClB,GAAIH,KAAK,CAAGI,aAAa,CAAGL,SAAS,CAACM,MAAM,CAAE,CAC1CJ,QAAQ,CAACD,KAAK,CAAG,CAAC,CAAC,CAAE;AACzB,CAAC,IAAM,CACHC,QAAQ,CAAC,CAAC,CAAC,CAAE;AACjB,CACJ,CAAC,CAED,KAAM,CAAAK,GAAG,CAAG,EAAE,CAAE;AAChB,KAAM,CAAAF,aAAa,CAAG,CAAC,CAAE;AAEzB,mBACIR,KAAA,QAAKW,SAAS,CAAC,4CAA4C,CAAAC,QAAA,eAEvDd,IAAA,WACIa,SAAS,CAAC,kEAAkE,CAC5EE,OAAO,CAAEP,MAAO,CAAAM,QAAA,CACnB,QAED,CAAQ,CAAC,cAGTd,IAAA,QACIa,SAAS,CAAC,0DAA0D,CACpEG,KAAK,CAAE,CACHC,SAAS,qBAAAC,MAAA,CAAsBZ,KAAK,EAAI,GAAG,CAAGI,aAAa,CAAC,SAAAQ,MAAA,CAAOZ,KAAK,EAAIM,GAAG,CAACF,aAAa,CAAC,QAClG,CAAE,CAAAI,QAAA,CAEDT,SAAS,CAACc,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACvBrB,IAAA,QAEIa,SAAS,CAAC,eAAe,CACzBG,KAAK,CAAE,CACH;AACAM,KAAK,SAAAJ,MAAA,CAAU,GAAG,CAAGR,aAAa,SAAAQ,MAAA,CAAQN,GAAG,EAAIF,aAAa,CAAG,CAAC,CAAC,CAAIA,aAAa,OACxF,CAAE,CAAAI,QAAA,cAEFd,IAAA,CAACF,SAAS,EAACyB,KAAK,CAAEH,IAAK,CAAC,CAAC,EAPpBC,KAQJ,CACR,CAAC,CACD,CAAC,cAGNrB,IAAA,WACIa,SAAS,CAAC,yEAAyE,CACnFE,OAAO,CAAEN,OAAQ,CAAAK,QAAA,CACpB,QAED,CAAQ,CAAC,EACR,CAAC,CAEd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}