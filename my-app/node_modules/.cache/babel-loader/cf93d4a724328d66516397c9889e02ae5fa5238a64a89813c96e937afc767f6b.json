{"ast":null,"code":"var _jsxFileName = \"D:\\\\.Net\\\\tmp\\\\my-app\\\\src\\\\Page\\\\WatchPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport RandomAnime from '../Component/RandomAnime';\nimport TopAnime from '../Component/TopAnime';\nimport { getAnime, getListChapter } from '../Service/Anime';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WatchPage({\n  AnimeList\n}) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [Anime, setAnime] = useState();\n  const [Chapters, setChapters] = useState();\n  useEffect(() => {\n    getAnime(id).then(data => {\n      setAnime(data);\n    });\n    getListChapter(id).then(data => {\n      setChapters(data);\n    });\n  }, [id]);\n  if (!Anime) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"justify-center flex h-full\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[60vw] flex bg-custom_black justify-between p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[70%] h-full \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[28%] space-y-5\",\n        children: [/*#__PURE__*/_jsxDEV(RandomAnime, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TopAnime, {\n          AnimeList: AnimeList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(WatchPage, \"M1ZVMLT6yD3oq/C4vHZ+EIYl7+w=\", false, function () {\n  return [useParams];\n});\n_c = WatchPage;\nvar _c;\n$RefreshReg$(_c, \"WatchPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","RandomAnime","TopAnime","getAnime","getListChapter","jsxDEV","_jsxDEV","WatchPage","AnimeList","_s","id","Anime","setAnime","Chapters","setChapters","then","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/.Net/tmp/my-app/src/Page/WatchPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport RandomAnime from '../Component/RandomAnime';\r\nimport TopAnime from '../Component/TopAnime';\r\nimport { getAnime, getListChapter } from '../Service/Anime';\r\n\r\n\r\nexport default function WatchPage({ AnimeList }) {\r\n  const { id } = useParams()\r\n  const [Anime, setAnime] = useState()\r\n  const [Chapters,setChapters]=useState()\r\n  useEffect(() => {\r\n    getAnime(id).then((data) => {\r\n      setAnime(data);\r\n    })\r\n    getListChapter(id).then((data)=>{\r\n    setChapters(data)\r\n    })\r\n  }, [id])\r\n\r\n  if (!Anime) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-full\">\r\n        <p className=\"text-white text-xl\">Loading...</p> {/* Display a loading message */}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className='justify-center flex h-full'>\r\n      <div className='w-[60vw] flex bg-custom_black justify-between p-5'>\r\n        <div className='w-[70%] h-full '>\r\n          \r\n        </div>\r\n        <div className='w-[28%] space-y-5'>\r\n          <RandomAnime />\r\n          <TopAnime AnimeList={AnimeList} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,QAAQ,EAAEC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5D,eAAe,SAASC,SAASA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM;IAAEC;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC;EACpC,MAAM,CAACc,QAAQ,EAACC,WAAW,CAAC,GAACf,QAAQ,CAAC,CAAC;EACvCD,SAAS,CAAC,MAAM;IACdK,QAAQ,CAACO,EAAE,CAAC,CAACK,IAAI,CAAEC,IAAI,IAAK;MAC1BJ,QAAQ,CAACI,IAAI,CAAC;IAChB,CAAC,CAAC;IACFZ,cAAc,CAACM,EAAE,CAAC,CAACK,IAAI,CAAEC,IAAI,IAAG;MAChCF,WAAW,CAACE,IAAI,CAAC;IACjB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,KAAK,EAAE;IACV,oBACEL,OAAA;MAAKW,SAAS,EAAC,yCAAyC;MAAAC,QAAA,gBACtDZ,OAAA;QAAGW,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAEV;EACA,oBACEhB,OAAA;IAAKW,SAAS,EAAC,4BAA4B;IAAAC,QAAA,eACzCZ,OAAA;MAAKW,SAAS,EAAC,mDAAmD;MAAAC,QAAA,gBAChEZ,OAAA;QAAKW,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE3B,CAAC,eACNhB,OAAA;QAAKW,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCZ,OAAA,CAACL,WAAW;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACfhB,OAAA,CAACJ,QAAQ;UAACM,SAAS,EAAEA;QAAU;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACb,EAAA,CAjCuBF,SAAS;EAAA,QAChBP,SAAS;AAAA;AAAAuB,EAAA,GADFhB,SAAS;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}